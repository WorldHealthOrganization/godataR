#Load necessary packages
library(RODBC)
library(tidyverse)
library(readxl)

#Connect to SQL Server using ODBC connection
#The ODBC connection has to be set up in Windows, before this code will work
EAMS <- odbcConnect("EAMS", uid="EAMS_READONLY", pwd="q#+=4f1c2#DHF!#$~gI-3!+8~d$q")

#Import Disease Categories Spreadsheet
disease.categories <- read_xlsx("GDDOC Disease Categories v2.xlsx") %>%
  rename_all(gsub, pattern=" ", replacement="")

#Import EAMS Tables from SQL Server
agents <- sqlFetch(EAMS,"Agents")
countries <- sqlFetch(EAMS,"Countries")
outbreaks <- sqlFetch(EAMS,"Outbreaks")
country.events <- sqlFetch(EAMS,"CountryEvents")
daily.reports <- sqlFetch(EAMS,"DailyReports")

#Create Dataset
df <- country.events %>%
  
  #Remove deleted recrods
  filter(is.na(Deleted)) %>%

  #keep only core fields
  select(CountryEventID, EventID, ReportID, CountryID) %>%
  
  #merge with other tables
  left_join( outbreaks %>%
               select(EventID, OutbreakID, ReportType, AgentID=DiseaseDiagnosisID),
             by="EventID") %>%
  left_join( agents %>%
               select(AgentID, AgentName),
             by="AgentID") %>%
  left_join( countries %>%
               select(CountryID, CountryName),
             by="CountryID") %>%
  left_join( daily.reports %>%
               select(ReportID, ReportSentDate),
             by="ReportID") %>%
  
  #Calculate Report Year
  mutate(reportYear = as.numeric(format(ReportSentDate,"%Y"))) %>%
  
  #Keep Only Events of International Importance
  filter(ReportType==1) %>%
  
  #Remove records not reported
  filter(!is.na(ReportSentDate)) %>%
  
  #Remove the United States
  filter(CountryName != "United States")

#Get Final Agent for Each Outbreak
df.final.agent <- df %>%
  group_by(OutbreakID) %>%
  filter(ReportSentDate==max(ReportSentDate)) %>%
  select(OutbreakID, FinalAgent=AgentName) %>%
  ungroup()
df <- df %>%
  left_join(df.final.agent, by="OutbreakID")


#Get List of Flu Outbreaks
flu.outbreaks <- df %>%
  filter(grepl("Influenza",FinalAgent)) %>%
  distinct(OutbreakID) %>%
  as_vector() %>%
  unname()

#Combine flu events if:
#   - same final agent
#   - same country
df.flu.merged <- df %>%
  filter(OutbreakID %in% flu.outbreaks) %>%
  distinct(FinalAgent, CountryName) %>%
  mutate(OutbreakID_new = paste0("Flu-",row_number())) %>%
  right_join(df, by=c("CountryName","FinalAgent")) %>%
  mutate(OutbreakID = case_when(is.na(OutbreakID_new) ~ OutbreakID,
                               !is.na(OutbreakID_new) ~ OutbreakID_new))


#Create Final Simplified Dataset
df.final <- df.flu.merged %>%
  distinct(OutbreakID, FinalAgent, CountryName, reportYear) %>%
  rename(AgentName=FinalAgent, Country=CountryName, Year=reportYear) %>%
  left_join(disease.categories, by="AgentName") %>%
  mutate(DiseaseCategory  = replace_na(DiseaseCategory, replace="Other")) %>%
  mutate(DiseaseCategory2 = replace_na(DiseaseCategory2,replace="Other"))

#Check which diseases are in "Other"
df.final %>%
  filter(DiseaseCategory2=="Other") %>%
  group_by(AgentName) %>%
  summarize(n = n()) %>%
  ungroup() %>%
  arrange(-n)


#Export as CSV
write.csv(df.final, "C:/Users/kux9/CDC/GDDOC - Documents/Dashboard/EAMS Dashboard/Public Facing/2021 08 26/EAMS Data.csv", fileEncoding = "UTF-8")

#Export final disease categorization
df.final.categories <- df.final %>%
  distinct(DiseaseCategory2, AgentName) %>%
  arrange(DiseaseCategory2, AgentName) %>%
  select(Category=DiseaseCategory2, AgentName)
write.csv(df.final.categories, "C:/Users/kux9/CDC/GDDOC - Documents/Dashboard/EAMS Dashboard/Public Facing/2021 08 26/Final Disease Categories.csv", row.names = FALSE)
