% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cases.R
\name{get_cases}
\alias{get_cases}
\title{Download cases from Go.Data}
\usage{
get_cases(
  url = url,
  username = username,
  password = password,
  outbreak_id = outbreak_id,
  method = c("export", "batch"),
  batch_size = 50000,
  wait = 2,
  file.type = c("json", "csv")
)
}
\arguments{
\item{url}{Insert the base URL for your instance of Go.Data here. Don't forget the forward slash "/" at end!}

\item{username}{The email address for your Go.Data login.}

\item{password}{The password for your Go.Data login}

\item{outbreak_id}{The id number for the outbreak for which you want to download cases.}

\item{method}{The method to download data. \code{method="export"} is the preferred and default method for Go.Data version 2.38.1 or later. See Details.}

\item{batch_size}{If \code{method="batches"}, then \code{batch_size} specifies the number of records to retrieve in each iteration.}

\item{wait}{If \code{method="export"}, then \code{wait} is the number of seconds to wait in between iterations of checking the status of the export.}

\item{file.type}{If \code{method="export"}, then \code{file.type} determines Whether the resulting data frame should contain nested fields (\code{file.type="json"}, the default) or an entirely flat data structure (\code{file.type="csv"})}
}
\value{
Returns a data frame of cases. Some fields, such as addresses, hospitalization history, and questionnaire fields will require further unnesting. See the \code{\link[tidyr]{unnest}} function.
}
\description{
A function to retrieve the case data for a
specific \code{outbreak_id}.
}
\details{
This function works on all versions of Go.Data.There
are two methods for downloading the data:

\code{method="batches"} will work on all versions of
Go.Data. This method relies on the GET outbreak/{id}/cases
API endpoint. Cases are then retrieved in batches
based on \code{batch_size} and appended together into
a final dataset.

\code{method="export"} will only work on Go.Data versions
2.38.1 or newer. This method relies on the GET
outbreak/{id}/cases/export API endpoint. An export
request is submitted to the server, and then when the
export is ready, it will be downloaded. Due to better
performance and more options, \code{method="export"} will
be the default if you are using Go.Data version 2.28.1
or newer.
}
\examples{
\dontrun{
url <- "https://MyGoDataServer.com/"
username <- "myemail@email.com"
password <- "mypassword"
outbreak_id <- "3b5554d7-2c19-41d0-b9af-475ad25a382b"

cases <- get_cases(url=url,
                   username=username,
                   password=password,
                   outbreak_id=outbreak_id)
}
}
