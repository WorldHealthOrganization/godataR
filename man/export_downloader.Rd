% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export_downloader.R
\name{export_downloader}
\alias{export_downloader}
\title{Function to manage export downloads}
\usage{
export_downloader(
  url = url,
  username = username,
  password = password,
  api_call_request = api_call_request,
  wait = wait,
  file_type = file_type
)
}
\arguments{
\item{url}{Insert the base URL for your instance of Go.Data here. Don't
forget the forward slash "/" at end!}

\item{username}{The email address for your Go.Data login.}

\item{password}{The password for your Go.Data login}

\item{api_call_request}{The API url to get the number of records.}

\item{wait}{The number of seconds to wait in between iterations of checking
the status of the export.}

\item{file_type}{Whether the resulting data frame should contain nested
fields (\code{file_type = "json"}, the default) or an entirely flat data structure
(\code{file_type = "csv"})}
}
\value{
Returns a data frame. Some fields, such as addresses, hospitalization
history, and questionnaire fields may require further unnesting. See
\verb{\link[tidyr]\{nest\}} for assitance with unnesting.
}
\description{
A housekeeping function to do export requests & downloads.
}
\examples{
\dontrun{
url <- "https://MyGoDataServer.com/"
username <- "myemail@email.com"
password <- "mypassword"
outbreak_id <- "3b5554d7-2c19-41d0-b9af-475ad25a382b"

cases <- get_cases(
  url = url,
  username = username,
  password = password,
  outbreak_id = outbreak_id
)
}
}
