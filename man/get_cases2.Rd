% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cases2.R
\name{get_cases2}
\alias{get_cases2}
\title{Download cases from Go.Data (version 2.38.1 or later)}
\usage{
get_cases2(
  url = url,
  username = username,
  password = password,
  outbreak_id = outbreak_id,
  wait = 5,
  file.type = c("json", "csv")
)
}
\arguments{
\item{url}{Insert the base URL for your instance of Go.Data here. Don't forget the forward slash "/" at end!}

\item{username}{The email address for your Go.Data login.}

\item{password}{The password for your Go.Data login}

\item{outbreak_id}{The id number for the outbreak for which you want to download cases.}

\item{wait}{The number of seconds to wait in between iterations of checking the status of the download. Default is 5 seconds, but the user can specify a smaller value to speed up the process if the dataset is small.}

\item{file.type}{Whether the resulting data frame should contain nested fields (\code{file.type="json"}, the default) or an entirely flat data structure (\code{file.type="csv"})}
}
\value{
Returns a data frame of cases.
}
\description{
A function to retrieve the case data for a
specific \code{outbreak_id}. This function relies
on the \verb{/outbreaks/\{id\}/cases/export} API
endpoint.
}
\details{
If \code{file.type="json"}, then some fields, such as addresses, hospitalization history, and questionnaire fields may require further unnesting. See the \code{tidyr::unnest()} function.

If \code{file.type="csv"}, then all fields will be unnested resulting in a greater number of fields.
}
\examples{
\dontrun{
url <- "https://MyGoDataServer.com/"
username <- "myemail@email.com"
password <- "mypassword"
outbreak_id <- "3b5554d7-2c19-41d0-b9af-475ad25a382b"
cases <- get_cases2(url=url,
                    username=username,
                    password=password,
                    outbreak_id=outbreak_id)
}
}
